{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel ourfirstapp",
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "description": "Logs the user into the system and returns a token for further API calls.",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "superadmin@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "superadmin123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged in successfully"
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "your_generated_token_here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Log Out",
                "description": "Logs the user out and invalidates the token.",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/recipe/add": {
            "post": {
                "tags": [
                    "Recipe Management"
                ],
                "summary": "Add a new Recipe",
                "description": "This is the Add Recipe API",
                "operationId": "7f8e9815ff17196da09a79a0511d3d19",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "recipe_name",
                                    "description",
                                    "subtitle",
                                    "image"
                                ],
                                "properties": {
                                    "recipe_name": {
                                        "type": "string",
                                        "example": "Jhol Momo Recipe"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Ingredients:\n\n*For Momos:\n\n*    2 cups all-purpose flour\n*    1/2 cup water (for kneading)\n*    1 cup minced chicken/vegetable filling\n*    1/4 tsp salt\n*    1 tbsp oil\n\n*For Jhol (Soup):\n\n*    3 medium tomatoes, boiled and peeled\n*    2 dried red chilies (adjust spice level)\n*    1 tsp sesame seeds, roasted\n*    1 tsp cumin seeds, roasted\n*    2 garlic cloves\n*    1-inch piece ginger\n*    1 tbsp mustard oil\n*    2 cups warm water\n*    Salt to taste\n\n*Instructions:\n\n*1. Momos:\n\n*    Knead flour, water, and salt into a soft dough; rest for 20 minutes.\n*    Roll dough thin, cut small circles, fill with your choice of filling, and shape into momos.\n*    Steam for 10–12 minutes until cooked.\n*\n*2. Jhol:\n*\n*    Blend tomatoes, chilies, sesame seeds, cumin, garlic, and ginger into a smooth paste.\n*    Heat mustard oil, add the paste, and sauté for 2 minutes.\n*    Add warm water and salt, simmer for 5 minutes.\n*\n*3. Assemble:\n*\n*    Place momos in a bowl and pour jhol over them.\n*    Garnish with chopped cilantro and serve hot."
                                    },
                                    "subtitle": {
                                        "type": "string",
                                        "example": "Jhol momo for excellent weather condition"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "https://enq69sdfnv7.exactdn.com/wp-content/uploads/2024/02/JHOL-MOMO-SOUP-RECIPE-3-1.png?strip=all&lossy=1&ssl=1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Recipe added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recipe Added successfully"
                                        },
                                        "recipe_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/recipe": {
            "get": {
                "tags": [
                    "Recipe Management"
                ],
                "summary": "Get all Recipe",
                "description": "Fetch all recipe details.",
                "operationId": "5506be94bc7bcb99de00e58df6110202",
                "responses": {
                    "200": {
                        "description": "All recipes fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "recipe_name": {
                                                "type": "string",
                                                "example": "Chocolate Cake"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "A delicious chocolate cake recipe."
                                            },
                                            "subtitle": {
                                                "type": "string",
                                                "example": "Easy to prepare and tasty."
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-11-22T07:46:58.000000Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-11-22T07:46:58.000000Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No recipes found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No recipes found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/recipe/{id}": {
            "get": {
                "tags": [
                    "Recipe Management"
                ],
                "summary": "Get a recipe by ID",
                "description": "Fetch a recipe's details by its unique ID.",
                "operationId": "c0bfd6d15a0f76d6ff25918c7bc98ada",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recipe to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recipe fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "recipe": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "recipe_name": {
                                                    "type": "string",
                                                    "example": "Chocolate Cake"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A delicious chocolate cake recipe."
                                                },
                                                "subtitle": {
                                                    "type": "string",
                                                    "example": "Easy to prepare and tasty."
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-22T07:46:58.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-22T07:46:58.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recipe not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Recipe not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/recipe/delete/{id}": {
            "delete": {
                "tags": [
                    "Recipe Management"
                ],
                "summary": "Delete a Recipe",
                "description": "Delete a recipe by their ID",
                "operationId": "393be54e0f7396bdcf2a3ee8a090734b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Recipe to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recipe deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recipe deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recipe not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Recipe not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/recipe/update/{id}": {
            "put": {
                "tags": [
                    "Recipe Management"
                ],
                "summary": "Update a specific recipe",
                "description": "Update a specific recipe's details by its unique ID.",
                "operationId": "44b9f765a9704739da3c5834b2ff6732",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the recipe to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "recipe_name": {
                                        "type": "string",
                                        "example": "Chocolate Cake"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A delicious chocolate cake recipe."
                                    },
                                    "subtitle": {
                                        "type": "string",
                                        "example": "Easy to prepare and tasty."
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "https://example.com/image.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Recipe updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "recipe_name": {
                                            "type": "string",
                                            "example": "Updated Chocolate Cake"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "A new description for the updated recipe."
                                        },
                                        "subtitle": {
                                            "type": "string",
                                            "example": "Even tastier now!"
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "https://example.com/new-image.jpg"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-11-22T07:46:58.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-11-23T07:46:58.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recipe not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No recipe with that ID found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/latestrecipe": {
            "get": {
                "tags": [
                    "Recipe Management"
                ],
                "summary": "Get the latest recipe",
                "description": "Fetch the most recent recipe added to the system.",
                "operationId": "60c9abc2eec005db79a266ef517e84dc",
                "responses": {
                    "200": {
                        "description": "Latest recipe fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "recipe": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "recipe_name": {
                                                    "type": "string",
                                                    "example": "Chocolate Cake"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A delicious chocolate cake recipe."
                                                },
                                                "subtitle": {
                                                    "type": "string",
                                                    "example": "Easy to prepare and tasty."
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-22T07:46:58.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-22T07:46:58.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No recipes found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No recipes found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Register User",
                "description": "This is the User Register API",
                "operationId": "2f25885f3b6f61ca11724ec302d2e439",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "role_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "admin@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "admin123"
                                    },
                                    "role_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/delete/{id}": {
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete a user",
                "description": "Delete a user by their ID",
                "operationId": "b1eb74872918c5b8865c788a7705c30e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get a user by ID",
                "description": "Fetch a user's details by their unique ID.",
                "operationId": "f551d752afe5e44b785ee6c802939d96",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Superadmin"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "superadmin@gmail.com"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-11-22T07:46:58.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-11-22T07:46:58.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get all users",
                "description": "Fetch all users' details.",
                "operationId": "83ea87314253b84a485db86a89419de2",
                "responses": {
                    "200": {
                        "description": "All users fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Superadmin"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "superadmin@gmail.com"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "example": "2024-11-22T07:46:58.000000Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "example": "2024-11-22T07:46:58.000000Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No users found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No users found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/update/{id}": {
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update a specific user",
                "description": "Update a specific user's details by ID",
                "operationId": "af6d857568b2a04844dbdd82d7f4f9d1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Superadmin"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "superadmin@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "securepassword"
                                    },
                                    "role_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Superadmin"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "superadmin@gmail.com"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2024-11-22T07:46:58.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2024-11-23T07:46:58.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No user with that ID found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/changepassword/{id}": {
            "patch": {
                "tags": [
                    "User Management"
                ],
                "summary": "Change password of a specific user",
                "description": "Update a specific user's password by ID",
                "operationId": "9ea18826659d1ad6e314589b4811b098",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "example": "securepassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Superadmin"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "superadmin@gmail.com"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2024-11-22T07:46:58.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2024-11-23T07:46:58.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No user with that ID found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Recipe Management",
            "description": "Recipe Management"
        },
        {
            "name": "User Management",
            "description": "User Management"
        }
    ]
}